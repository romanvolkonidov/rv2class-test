server_names_hash_bucket_size 64;

types {
    application/wasm     wasm;
    audio/wav            wav;
}

upstream prosody {
    zone upstreams 64K;
    server 127.0.0.1:5280;
    keepalive 2;
}

upstream jvb1 {
    zone upstreams 64K;
    server 127.0.0.1:9090;
    keepalive 2;
}

map $arg_vnode $prosody_node {
    default prosody;
}

server {
    listen 80;
    listen [::]:80;
    server_name app.rv2class.com 108.61.245.179;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root         /usr/share/jitsi-meet;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.rv2class.com 108.61.245.179;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    ssl_certificate /etc/jitsi/meet/app.rv2class.com.crt;
    ssl_certificate_key /etc/jitsi/meet/app.rv2class.com.key;
    
    set $config_js_location /etc/jitsi/meet/app.rv2class.com-config.js;
    
    root /usr/share/jitsi-meet;
    index index.html;
    
    # ============= LANDING PAGE (Root) =============
    location = / {
        charset utf-8;
        try_files /index.html =404;
    }

    # ============= DIRECT HTML FILE ACCESS =============
    # Serve .html files directly (auth-page.html, students.html, etc.)
    location ~ ^/([a-zA-Z0-9_-]+)\.html$ {
        charset utf-8;
        try_files /$1.html =404;
    }

    # ============= STUDENTS MANAGEMENT =============
    location = /students {
        charset utf-8;
        try_files /students.html =404;
    }

    # Student welcome pages
    location ~ ^/student/([a-zA-Z0-9_-]+)$ {
        charset utf-8;
        try_files /student-welcome.html =404;
    }

    # ============= TEACHER ROOMS =============
    location ~ ^/teacher-[a-zA-Z0-9]+$ {
        charset utf-8;
        override_charset on;
        add_header Content-Type "text/html; charset=UTF-8" always;
        try_files /room.html =404;
    }

    # ============= GENERIC ROOM URLs (for conferences) =============
    location ~ ^/([a-zA-Z0-9_-]+)$ {
        charset utf-8;
        override_charset on;
        add_header Content-Type "text/html; charset=UTF-8" always;
        try_files /index.html /auth-page.html =404;
    }

    # ============= JITSI STATIC FILES =============
    location ~ ^/(libs|css|images|fonts|lang|sounds)/(.+)$ {
        add_header 'Access-Control-Allow-Origin' '*';
        try_files /$1/$2 =404;
        charset utf-8;
        if ($arg_v) {
            expires 1y;
        }
    }

    # Jitsi config and API files
    location = /config.js {
        alias $config_js_location;
        charset utf-8;
    }

    location = /interface_config.js {
        alias /usr/share/jitsi-meet/interface_config.js;
        charset utf-8;
    }

    location = /external_api.js {
        alias /usr/share/jitsi-meet/libs/external_api.min.js;
        charset utf-8;
    }

    # Custom RV2Class static pages and files
    location /static/ {
        alias /usr/share/jitsi-meet/static/;
        charset utf-8;
        try_files $uri =404;
    }

    location = /_api/room-info {
        proxy_pass http://prosody/room-info?$args;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
    }

    # BOSH
    location = /http-bind {
        proxy_pass http://$prosody_node/http-bind?$args;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Connection "";
    }

    # xmpp websockets
    location = /xmpp-websocket {
        proxy_pass http://$prosody_node/xmpp-websocket?$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        tcp_nodelay on;
    }

    # colibri (JVB) websockets
    location ~ ^/colibri-ws/default-id/(.*) {
        proxy_pass http://jvb1/colibri-ws/default-id/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        tcp_nodelay on;
    }
}
