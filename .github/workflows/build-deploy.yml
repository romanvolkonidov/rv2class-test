name: Build and Deploy RV2Class

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Install dependencies
      run: |
        cd jitsi-custom/jitsi-meet
        npm ci --legacy-peer-deps
        
    - name: Build production bundle
      run: |
        cd jitsi-custom/jitsi-meet
        NODE_OPTIONS="--max-old-space-size=8192" make
        
    - name: Create deployment package
      run: |
        cd jitsi-custom/jitsi-meet
        tar -czf ../../rv2class-build.tar.gz \
          css/ images/ libs/ fonts/ sounds/ lang/ static/ \
          --exclude='*.map' \
          $(find . -maxdepth 1 -name '*.html' -o -name '*.js' | grep -v node_modules)
          
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: rv2class-build
        path: rv2class-build.tar.gz
        retention-days: 7
    
    - name: Setup SSH key
      run: |
        mkdir -p ~/.ssh
        cat << 'EOF' > ~/.ssh/deploy_key
        ${{ secrets.SSH_PRIVATE_KEY }}
        EOF
        chmod 600 ~/.ssh/deploy_key
        chmod 700 ~/.ssh
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        # Test the key
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no root@${{ secrets.SERVER_IP }} "echo 'SSH connection successful'"
        
    - name: Deploy to server via SCP
      run: |
        scp -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
          rv2class-build.tar.gz root@${{ secrets.SERVER_IP }}:/tmp/
        
    - name: Execute deployment commands
      run: |
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no \
          root@${{ secrets.SERVER_IP }} << 'DEPLOY'
          cd /usr/share/jitsi-meet
          echo "ðŸ“¦ Backing up current version..."
          tar -czf /tmp/backup-$(date +%Y%m%d-%H%M%S).tar.gz . 2>/dev/null || true
          
          echo "ðŸš€ Extracting new build..."
          tar -xzf /tmp/rv2class-build.tar.gz
          
          echo "ðŸ”’ Setting permissions..."
          chown -R www-data:www-data .
          
          echo "ðŸ”„ Restarting nginx..."
          systemctl restart nginx
          
          echo "âœ… Deployment complete!"
          ls -lh libs/app.bundle.min.js 2>/dev/null || echo "Bundle file check failed"
        DEPLOY
