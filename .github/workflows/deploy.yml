name: Auto Deploy to Vultr

on:
  # Deploy on every push to main
  push:
    branches: [ main ]
  
  # Also deploy every night at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual deployment
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Vultr Server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
      run: |
        # Install sshpass
        sudo apt-get update -qq
        sudo apt-get install -y sshpass
        
        echo "🚀 Deploying to production server..."
        
        # SSH and deploy
        sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no root@$SERVER_IP << 'ENDSSH'
        set -e
        
        echo "📂 Navigating to app directory..."
        cd /var/www/rv2class
        
        echo "📥 Pulling latest code..."
        git fetch origin
        git reset --hard origin/main
        
        echo "📦 Installing dependencies..."
        npm install
        
        echo "� Setting up environment variables..."
        cat > .env.local << 'EOF'
        # Firebase Configuration
        NEXT_PUBLIC_FIREBASE_API_KEY=AIzaSyB_VsLZaaQ_m3WNVlPjfhy715BXo8ax004
        NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=tracking-budget-app.firebaseapp.com
        NEXT_PUBLIC_FIREBASE_DATABASE_URL=https://tracking-budget-app-default-rtdb.firebaseio.com
        NEXT_PUBLIC_FIREBASE_PROJECT_ID=tracking-budget-app
        NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=tracking-budget-app.appspot.com
        NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=912992088190
        NEXT_PUBLIC_FIREBASE_APP_ID=1:912992088190:web:926c8826b3bc39e2eb282f
        
        # Jitsi Configuration
        NEXT_PUBLIC_JITSI_DOMAIN=app.rv2class.com
        EOF
        
        echo "�🔨 Building Next.js app..."
        npm run build
        
        echo "♻️  Restarting application..."
        pm2 restart rv2class || pm2 start ecosystem.config.js
        pm2 save
        
        echo "✅ Deployment complete!"
        pm2 list
        ENDSSH
    
    - name: Deployment Status
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "✅ Deployment successful!"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi
