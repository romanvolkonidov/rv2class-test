name: Auto Deploy to Vultr

on:
  # Deploy on every push to main
  push:
    branches: [ main ]
  
  # Also deploy every night at 2 AM UTC
  schedule:
    - cron: '0 2 * * *'
  
  # Allow manual deployment
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Vultr Server
      env:
        SERVER_IP: ${{ secrets.SERVER_IP }}
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
      run: |
        echo "üöÄ Deploying to production server..."
        
        # Debug: Check if secrets are set
        if [ -z "$SERVER_IP" ]; then
          echo "‚ùå ERROR: SERVER_IP secret is not set!"
          echo "Please add SERVER_IP=108.61.245.179 to GitHub Secrets"
          exit 1
        fi
        
        if [ -z "$SSH_PRIVATE_KEY" ]; then
          echo "‚ùå ERROR: SSH_PRIVATE_KEY secret is not set!"
          exit 1
        fi
        
        echo "‚úÖ Secrets verified. Deploying to: $SERVER_IP"
        
        # Setup SSH key
        mkdir -p ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        
        # Add server to known hosts
        ssh-keyscan -H "$SERVER_IP" >> ~/.ssh/known_hosts 2>/dev/null
        
        # SSH and deploy using key authentication
        ssh -i ~/.ssh/deploy_key -o StrictHostKeyChecking=no "root@$SERVER_IP" << 'ENDSSH'
        set -e
        
        echo "üìÇ Navigating to app directory..."
        cd /var/www/rv2class
        
        echo "üì• Pulling latest code..."
        git fetch origin
        git reset --hard origin/main
        
        echo "üèóÔ∏è  Building Jitsi Meet..."
        cd jitsi-custom/jitsi-meet
        
        echo "  ‚Üí Installing Jitsi dependencies..."
        npm install --legacy-peer-deps
        
        echo "  ‚Üí Building Jitsi Meet bundle..."
        make
        
        echo "  ‚Üí Copying built files to /usr/share/jitsi-meet/"
        cp -r css libs sounds images fonts static lang *.html *.js /usr/share/jitsi-meet/
        
        cd /var/www/rv2class
        
        echo "üìã Deploying Jitsi config files..."
        if [ -f "jitsi-custom/jitsi-meet/config.js" ]; then
          echo "  ‚Üí Copying config.js to /etc/jitsi/meet/"
          cp jitsi-custom/jitsi-meet/config.js /etc/jitsi/meet/app.rv2class.com-config.js
        fi
        
        if [ -f "jitsi-custom/jitsi-meet/interface_config.js" ]; then
          echo "  ‚Üí Copying interface_config.js to /usr/share/jitsi-meet/"
          cp jitsi-custom/jitsi-meet/interface_config.js /usr/share/jitsi-meet/interface_config.js
        fi
        
        echo "üìÑ Deploying custom HTML pages..."
        if [ -d "jitsi-custom" ]; then
          cp jitsi-custom/*.html /usr/share/jitsi-meet/ 2>/dev/null || echo "  ‚ö†Ô∏è  No custom HTML files found"
        fi
        
        echo "‚ôªÔ∏è  Restarting all services..."
        echo "  ‚Üí Restarting Jitsi services..."
        systemctl restart prosody jicofo jitsi-videobridge2 2>/dev/null || echo "  ‚ö†Ô∏è  Jitsi services not found (skip if not installed)"
        
        echo "  ‚Üí Reloading Nginx..."
        systemctl reload nginx
        
        echo "‚úÖ Deployment complete!"
        echo ""
        echo "üìä Service Status:"
        systemctl status prosody jicofo jitsi-videobridge2 nginx --no-pager 2>/dev/null || echo "Services status check skipped"
        ENDSSH
    
    - name: Deployment Status
      if: always()
      run: |
        if [ $? -eq 0 ]; then
          echo "‚úÖ Deployment successful!"
        else
          echo "‚ùå Deployment failed!"
          exit 1
        fi
