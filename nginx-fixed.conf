server_names_hash_bucket_size 64;

types {
    application/wasm     wasm;
    audio/wav            wav;
}

upstream prosody {
    zone upstreams 64K;
    server 127.0.0.1:5280;
    keepalive 2;
}

upstream jvb1 {
    zone upstreams 64K;
    server 127.0.0.1:9090;
    keepalive 2;
}

upstream frontend {
    server 127.0.0.1:3000;
    keepalive 2;
}

map $arg_vnode $prosody_node {
    default prosody;
}

# Determine if this is a Jitsi room (simple alphanumeric path without slashes)
map $request_uri $is_jitsi_room {
    default 0;
    ~^/[a-zA-Z0-9][a-zA-Z0-9_-]*(/|\?|$) 1;
    ~^/_(.*) 0;  # Exclude _next, _api, etc.
    ~^/api/ 0;   # Exclude /api/
    ~^/student 0;  # Exclude /student
    ~^/teacher 0;  # Exclude /teacher
    ~^/room 0;     # Exclude /room
    ~^/students 0; # Exclude /students
}

server {
    listen 80;
    listen [::]:80;
    server_name app.rv2class.com;

    location ^~ /.well-known/acme-challenge/ {
        default_type "text/plain";
        root         /usr/share/jitsi-meet;
    }
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name app.rv2class.com;

    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    add_header Strict-Transport-Security "max-age=63072000" always;
    
    ssl_certificate /etc/jitsi/meet/app.rv2class.com.crt;
    ssl_certificate_key /etc/jitsi/meet/app.rv2class.com.key;

    set $config_js_location /etc/jitsi/meet/app.rv2class.com-config.js;

    # Next.js _next static files
    location /_next/ {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    # Next.js API routes
    location /api/ {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Next.js app routes (student, teacher, room, students)
    # Match with or without trailing slash, with or without query params
    location ~ ^/(student|teacher|room|students)(/|$|\?) {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Jitsi static files
    location ~ ^/(libs|css|images|fonts|lang|sounds)/(.*)$ {
        add_header 'Access-Control-Allow-Origin' '*';
        alias /usr/share/jitsi-meet/$1/$2;
        if ($arg_v) {
            expires 1y;
        }
    }

    # Jitsi config and API files
    location = /config.js {
        alias $config_js_location;
    }

    location = /external_api.js {
        alias /usr/share/jitsi-meet/libs/external_api.min.js;
    }

    location = /_api/room-info {
        proxy_pass http://prosody/room-info?$args;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
    }

    # BOSH
    location = /http-bind {
        proxy_pass http://$prosody_node/http-bind?$args;
        proxy_http_version 1.1;
        proxy_set_header X-Forwarded-For $remote_addr;
        proxy_set_header Host $http_host;
        proxy_set_header Connection "";
    }

    # xmpp websockets
    location = /xmpp-websocket {
        proxy_pass http://$prosody_node/xmpp-websocket?$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $http_host;
        tcp_nodelay on;
    }

    # colibri (JVB) websockets
    location ~ ^/colibri-ws/default-id/(.*) {
        proxy_pass http://jvb1/colibri-ws/default-id/$1$is_args$args;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        tcp_nodelay on;
    }

    # Homepage - Next.js frontend
    location = / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ðŸŽ¯ JITSI ROOMS - Match simple alphanumeric paths (not starting with underscore)
    # This MUST come before the catch-all location /
    location ~ ^/[a-zA-Z0-9][a-zA-Z0-9_-]*$ {
        root /usr/share/jitsi-meet;
        try_files /index.html =404;
        add_header 'Access-Control-Allow-Origin' '*';
    }

    # Catch-all for Next.js (including tutor pages like /roman, /violet)
    location / {
        proxy_pass http://frontend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
}
